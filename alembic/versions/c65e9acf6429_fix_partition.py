"""Fix partition

Revision ID: c65e9acf6429
Revises: 9a6ce65c4a6b
Create Date: 2025-09-26 17:15:51.380305

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c65e9acf6429'
down_revision: Union[str, Sequence[str], None] = '9a6ce65c4a6b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('backtests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('ticker', sa.String(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('strategy_type', sa.String(), nullable=False),
    sa.Column('strategy_params_json', sa.JSON(), nullable=False),
    sa.Column('initial_cash', sa.Float(), nullable=False),
    sa.Column('commission', sa.Float(), nullable=False),
    sa.Column('timeframe', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'COMPLETED', 'FAILED', name='backteststatus'), nullable=True),
    sa.Column('message', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_backtests_ticker_created', 'backtests', ['ticker', 'created_at'], unique=False)
    op.create_table('job_runs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('job_name', sa.String(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('finished_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'COMPLETED', 'FAILED', name='jobstatus'), nullable=True),
    sa.Column('message', sa.String(), nullable=True),
    sa.Column('elapsed_ms', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_job_runs_job_name_started', 'job_runs', ['job_name', 'started_at'], unique=False)
    op.create_table('symbols',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ticker', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('exchange', sa.String(), nullable=False),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ticker')
    )
    op.create_table('daily_positions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('backtest_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('position_size', sa.Float(), nullable=False),
    sa.Column('cash', sa.Float(), nullable=False),
    sa.Column('equity', sa.Float(), nullable=False),
    sa.Column('drawdown', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['backtest_id'], ['backtests.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_daily_positions_backtest_date', 'daily_positions', ['backtest_id', 'date'], unique=False)
    op.create_table('indicators',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symbol_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('params_hash', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['symbol_id'], ['symbols.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_indicators_symbol_date_name_hash', 'indicators', ['symbol_id', 'date', 'name', 'params_hash'], unique=True)
    op.create_table('metrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('backtest_id', sa.Integer(), nullable=False),
    sa.Column('total_return', sa.Float(), nullable=False),
    sa.Column('sharpe', sa.Float(), nullable=False),
    sa.Column('max_drawdown', sa.Float(), nullable=False),
    sa.Column('win_rate', sa.Float(), nullable=False),
    sa.Column('avg_trade_return', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['backtest_id'], ['backtests.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('backtest_id')
    )
    op.create_table('prices',
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('symbol_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('open', sa.Float(), nullable=False),
    sa.Column('high', sa.Float(), nullable=False),
    sa.Column('low', sa.Float(), nullable=False),
    sa.Column('close', sa.Float(), nullable=False),
    sa.Column('volume', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['symbol_id'], ['symbols.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('symbol_id'),
    postgresql_partition_by='HASH (symbol_id)'
    )
    op.create_index('ix_prices_symbol_date', 'prices', ['symbol_id', 'date'], unique=False)
    op.create_table('trades',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('backtest_id', sa.Integer(), nullable=False),
    sa.Column('entry_date', sa.Date(), nullable=False),
    sa.Column('exit_date', sa.Date(), nullable=True),
    sa.Column('side', sa.Enum('LONG', 'SHORT', name='tradeside'), nullable=False),
    sa.Column('entry_price', sa.Float(), nullable=False),
    sa.Column('exit_price', sa.Float(), nullable=True),
    sa.Column('size', sa.Float(), nullable=False),
    sa.Column('commission', sa.Float(), nullable=False),
    sa.Column('pnl', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['backtest_id'], ['backtests.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('trades')
    op.drop_index('ix_prices_symbol_date', table_name='prices')
    op.drop_table('prices')
    op.drop_table('metrics')
    op.drop_index('ix_indicators_symbol_date_name_hash', table_name='indicators')
    op.drop_table('indicators')
    op.drop_index('ix_daily_positions_backtest_date', table_name='daily_positions')
    op.drop_table('daily_positions')
    op.drop_table('symbols')
    op.drop_index('ix_job_runs_job_name_started', table_name='job_runs')
    op.drop_table('job_runs')
    op.drop_index('ix_backtests_ticker_created', table_name='backtests')
    op.drop_table('backtests')
    # ### end Alembic commands ###
